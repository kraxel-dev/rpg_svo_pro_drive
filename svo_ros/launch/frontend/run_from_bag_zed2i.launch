<launch>
  <arg name="cam_name" />
  <arg name="calib_file" default="$(find svo_ros)/param/calib/$(arg cam_name).yaml"/>

  <!-- MANDATORY IF: You utilize an arbitrary odometry tf as motion prior in the visual frontend  -->
  <!-- 
    Extrinsic calibration between your camera lense and the body of your additional odometry source. 
    Tf represents the pose of camera lense with respect to the odometry sensor body.
    Make sure that name of both sensor frames in this tf match the frame names in your config file for both sensors.
  -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_zed2i_left_optical" args="1.580 0.060 1.566 -0.458, 0.458, -0.538 0.538 base_link zed2i_left_camera_optical_frame "/>
  
  <!-- SVO node -->

  <node pkg="svo_ros" type="svo_node" name="svo" clear_params="true" output="screen" args="-v=40" >

    <!-- Camera topic to subscribe to -->
    <param name="cam0_topic" value="zed2i/zed_node/left/image_rect_color" type="str" />

    <!-- Camera calibration file -->
    <param name="calib_file" value="$(arg calib_file)" />

    <!--Parameters-->
    <rosparam file="$(find svo_ros)/param/pinhole_zed2i.yaml" />
    <param name="map_scale" value="1" />
    
    <!-- Loop closure detection parameters -->
    <param name="runlc" value="false" />
    <!--<rosparam file="$(find svo_ros)/param/loop_closing.yaml" />-->
    <!--<param name="voc_path" value="$(find svo_online_loopclosing)/vocabularies/" type="str" />-->

  </node>

  <!-- RVIZ + SVO GUI -->
  <node name="vis" pkg="rviz" type="rviz" args=" -d $(find svo_ros)/rviz_config.rviz" />
  <node name="svo_gui" pkg="rqt_gui" type="rqt_gui" args="-s rqt_svo.svo.Svo --args --topic svo" />

</launch>
